import com.dropbox.client2.DropboxAPI;
import com.dropbox.client2.DropboxAPI.Entry;
import com.dropbox.client2.ProgressListener;
import com.dropbox.client2.exception.DropboxException;
import com.dropbox.client2.exception.DropboxUnlinkedException;
import com.dropbox.client2.session.AccessTokenPair;
import com.dropbox.client2.session.Session.AccessType;
import com.dropbox.client2.session.AppKeyPair;
import com.dropbox.client2.session.RequestTokenPair;
import com.dropbox.client2.session.WebAuthSession;
import com.dropbox.client2.session.WebAuthSession.WebAuthInfo;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Desktop;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.table.*;
import javax.swing.JTree;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on Nov 7, 2011, 10:12:05 PM
 */

/**
 *
 * @author Boardwalk
 */
public class MainWindow extends javax.swing.JFrame {
    public static String rootPath = new File(".").getAbsolutePath(); //does this always point to Current User's Root Folder? -CQ
    DefaultTableModel dtm = new DefaultTableModel();
    String selectedFile = "";
    public static String userName = "";
    public static HashMap<String,Date> meta;

    public static DefaultListModel searchingForModel;
    public static DefaultListModel resultsModel;

    
    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
        searchingForModel = new DefaultListModel();
        resultsModel = new DefaultListModel();
        list_SearchingFor.setModel(searchingForModel);
        list_Results.setModel(resultsModel);
        
        AuthWindow aw = new AuthWindow();
        aw.setVisible(true);
       

    }
    
    public static void updateMeta(String filePath, Date mod){
        meta.put(filePath, mod);
        try{ //Update meta file
            System.out.println(filePath + " -- " + mod);
            System.out.println("Updating meta file " + userName + File.separator+".meta");
            ObjectOutputStream oos = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(userName + File.separator+".meta")));
            oos.writeObject(meta);
            oos.close();
        }catch(Exception e){
            System.err.println("Error writing to meta file");
            e.printStackTrace();
        }
    }
    
    public static Entry pushFile(File f) throws Exception{
        String dbPath = f.getAbsolutePath().replace(rootPath,"");
        System.out.println(dbPath);
        return DAPI.putFileOverwrite(dbPath,new FileInputStream(f),f.length(),null);
    
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btn_RemoveFile = new javax.swing.JButton();
        btn_EditFileKeywords = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtree = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        searchPasswordField = new javax.swing.JPasswordField();
        btn_EnableSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtField_SearchForKey = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_SearchingFor = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        btn_Search = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        list_Results = new javax.swing.JList();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Add File");

        btn_RemoveFile.setText("Remove File");
        btn_RemoveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RemoveFileActionPerformed(evt);
            }
        });

        btn_EditFileKeywords.setText("Edit File Content / Keywords");
        btn_EditFileKeywords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EditFileKeywordsActionPerformed(evt);
            }
        });

        jtree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jtreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jtree);

        jLabel1.setText("File Password:");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel2.setText("Search Function Password:");

        btn_EnableSearch.setText("Enable Search");
        btn_EnableSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EnableSearchActionPerformed(evt);
            }
        });

        jLabel3.setText("Keyword To Search For:");

        jButton2.setText("Add Key To Search List");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        list_SearchingFor.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(list_SearchingFor);

        jLabel4.setText("Searching For...");

        btn_Search.setText("Search");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        jLabel5.setText("Results:");

        list_Results.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(list_Results);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_EditFileKeywords, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
                    .addComponent(btn_RemoveFile, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btn_EnableSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtField_SearchForKey))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addComponent(btn_Search))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(jLabel5)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(searchPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_EnableSearch)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtField_SearchForKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_Search)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel5)
                                .addGap(3, 3, 3)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_EditFileKeywords)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_RemoveFile)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jtreeValueChanged
        // TODO add your handling code here:
        //System.out.println(jtree.getSelectionPath().toString());


    }//GEN-LAST:event_jtreeValueChanged

    private void btn_RemoveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RemoveFileActionPerformed
        // TODO add your handling code here:
        System.out.println("DELETE ME: " + jtree.getSelectionPath().toString());

        String deleteMe = jtree.getSelectionPath().toString();
        deleteMe = deleteMe.substring(deleteMe.indexOf("\\")+1, deleteMe.length()-1);
        System.out.println(deleteMe);


        String userPath = jtree.getSelectionPath().toString();
        userPath = userPath.substring(1, userPath.indexOf(","));
        System.out.println("UPATH : " + userPath);
        File delMe = new File(userPath + "\\" + deleteMe);
        if (delMe.exists())
        {
            delMe.delete();
        }

        try{
        jtree.setVisible(false);
        jtree.setSelectionPath(null);
        DAPI.delete(deleteMe);
        AuthWindow.obtainFiles(new File(userPath));
        FileTreeModel model = new FileTreeModel(new File(userPath));
        jtree.setModel(model);
        jtree.setVisible(true);
        }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_btn_RemoveFileActionPerformed

    private void btn_EditFileKeywordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EditFileKeywordsActionPerformed
        // TODO add your handling code here:
        if (jtree.getSelectionPath() == null)
        {
            System.out.println("Select a file first");
        }
        else
        {
            String selectedFile = jtree.getSelectionPath().toString();
            int lastComma = 0;
            while(selectedFile.indexOf(",") != -1)
            {
                lastComma = selectedFile.indexOf(",") + 1;
                selectedFile = selectedFile.substring(lastComma);
            }
            selectedFile = selectedFile.substring(selectedFile.indexOf("\\"), selectedFile.length()-1);
            String selectedFileLocation = AuthWindow.currentUserPath + selectedFile;
            //System.out.println("File Location: " + selectedFileLocation);

            File editFile = new File(selectedFileLocation);

            if (passwordField.getPassword().length == 0)
            {
                System.out.println("No password given");
                //show jmessagebox?
            }
            else
            {
                //send File and Given Password to crypto
                try
                {
                    //crypto.Crypto.keyAESdec(editFile, passwordField.getPassword());
                    System.out.println("1");
                    EditWindow ew = new EditWindow(editFile);
                    System.out.println("2");
                    System.out.println("3");
                    ew.setVisible(true);

                }catch (Exception ae){ae.printStackTrace();}
            }
        }

    }//GEN-LAST:event_btn_EditFileKeywordsActionPerformed

    private void btn_EnableSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EnableSearchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btn_EnableSearchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String keyToAdd = txtField_SearchForKey.getText();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
                char[] searchKey = searchPasswordField.getPassword();
        if (searchKey.length == 0) //is null
        {
            System.out.println("No search key entered");
        }
        else
        {
            try
            {
                crypto.SSE2.createDatabase(searchKey);
                File userRootPath = new File(rootPath);
                crypto.SSE2.buildIndex(userRootPath, searchKey);
                Vector<String> results = new Vector<String>();

                for(int i = 0; i < list_SearchingFor.getModel().getSize(); i++)
                {
                    Vector<String> traps =
                            crypto.SSE2.trapdoor(list_SearchingFor.getModel().getElementAt(i).toString(), searchKey);

                    results = crypto.SSE2.search(traps, searchKey);
                }
                //Return results here
                for (int i = 0; i < results.size(); i++)
                {
                    resultsModel.addElement(i);
                }

                crypto.SSE2.deleteDatabase(searchKey);
            }
            catch(Exception e){e.printStackTrace();}
        }
    }//GEN-LAST:event_btn_SearchActionPerformed

    /**
    * @param args the command line arguments
    */


   final static public String APP_KEY = "lzw0thue2gu9hco";
   final static public String APP_SECRET = "6p5trcwivd1zhsh";
   final static public AccessType ACCESS_TYPE = AccessType.APP_FOLDER;
   static public DropboxAPI<WebAuthSession> DAPI;

   static public Desktop desktop = Desktop.getDesktop();
   static public AppKeyPair AKPair = new AppKeyPair(APP_KEY, APP_SECRET);
   //static public WebAuthSession WAS;

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
                jtree.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_EditFileKeywords;
    private javax.swing.JButton btn_EnableSearch;
    private javax.swing.JButton btn_RemoveFile;
    private javax.swing.JButton btn_Search;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public static javax.swing.JTree jtree;
    private javax.swing.JList list_Results;
    private javax.swing.JList list_SearchingFor;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField searchPasswordField;
    private javax.swing.JTextField txtField_SearchForKey;
    // End of variables declaration//GEN-END:variables

}
